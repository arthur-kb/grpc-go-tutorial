// Code generated by protoc-gen-go. DO NOT EDIT.
// source: math.proto

package mathpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message for Sum.
type SumRequest struct {
	FirstNum             int32    `protobuf:"varint,1,opt,name=first_num,json=firstNum,proto3" json:"first_num,omitempty"`
	SecondNum            int32    `protobuf:"varint,2,opt,name=second_num,json=secondNum,proto3" json:"second_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f139a3799a86a974, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetFirstNum() int32 {
	if m != nil {
		return m.FirstNum
	}
	return 0
}

func (m *SumRequest) GetSecondNum() int32 {
	if m != nil {
		return m.SecondNum
	}
	return 0
}

// The response message for Sum.
type SumResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f139a3799a86a974, []int{1}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

// The request message for PrimeFactors.
type PrimeFactorsRequest struct {
	Num                  int64    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeFactorsRequest) Reset()         { *m = PrimeFactorsRequest{} }
func (m *PrimeFactorsRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeFactorsRequest) ProtoMessage()    {}
func (*PrimeFactorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f139a3799a86a974, []int{2}
}

func (m *PrimeFactorsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeFactorsRequest.Unmarshal(m, b)
}
func (m *PrimeFactorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeFactorsRequest.Marshal(b, m, deterministic)
}
func (m *PrimeFactorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeFactorsRequest.Merge(m, src)
}
func (m *PrimeFactorsRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeFactorsRequest.Size(m)
}
func (m *PrimeFactorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeFactorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeFactorsRequest proto.InternalMessageInfo

func (m *PrimeFactorsRequest) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

// The response message for PrimeFactors.
type PrimeFactorsResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeFactorsResponse) Reset()         { *m = PrimeFactorsResponse{} }
func (m *PrimeFactorsResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeFactorsResponse) ProtoMessage()    {}
func (*PrimeFactorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f139a3799a86a974, []int{3}
}

func (m *PrimeFactorsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeFactorsResponse.Unmarshal(m, b)
}
func (m *PrimeFactorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeFactorsResponse.Marshal(b, m, deterministic)
}
func (m *PrimeFactorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeFactorsResponse.Merge(m, src)
}
func (m *PrimeFactorsResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeFactorsResponse.Size(m)
}
func (m *PrimeFactorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeFactorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeFactorsResponse proto.InternalMessageInfo

func (m *PrimeFactorsResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "math.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "math.SumResponse")
	proto.RegisterType((*PrimeFactorsRequest)(nil), "math.PrimeFactorsRequest")
	proto.RegisterType((*PrimeFactorsResponse)(nil), "math.PrimeFactorsResponse")
}

func init() { proto.RegisterFile("math.proto", fileDescriptor_f139a3799a86a974) }

var fileDescriptor_f139a3799a86a974 = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0x4d, 0x2c, 0xc9,
	0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x3c, 0xb8, 0xb8, 0x82, 0x4b,
	0x73, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xa4, 0xb9, 0x38, 0xd3, 0x32, 0x8b, 0x8a,
	0x4b, 0xe2, 0xf3, 0x4a, 0x73, 0x25, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0x38, 0xc0, 0x02, 0x7e,
	0xa5, 0xb9, 0x42, 0xb2, 0x5c, 0x5c, 0xc5, 0xa9, 0xc9, 0xf9, 0x79, 0x29, 0x60, 0x59, 0x26, 0xb0,
	0x2c, 0x27, 0x44, 0xc4, 0xaf, 0x34, 0x57, 0x49, 0x95, 0x8b, 0x1b, 0x6c, 0x52, 0x71, 0x41, 0x7e,
	0x5e, 0x71, 0xaa, 0x90, 0x18, 0x17, 0x5b, 0x51, 0x6a, 0x71, 0x69, 0x4e, 0x09, 0xd4, 0x1c, 0x28,
	0x4f, 0x49, 0x9d, 0x4b, 0x38, 0xa0, 0x28, 0x33, 0x37, 0xd5, 0x2d, 0x31, 0xb9, 0x24, 0xbf, 0xa8,
	0x18, 0x66, 0xb3, 0x00, 0x17, 0x33, 0xcc, 0x4e, 0xe6, 0x20, 0x10, 0x53, 0x49, 0x8f, 0x4b, 0x04,
	0x55, 0x21, 0x56, 0x83, 0x99, 0x61, 0x06, 0x1b, 0xd5, 0x73, 0xb1, 0xf8, 0x26, 0x96, 0x64, 0x08,
	0xe9, 0x70, 0x31, 0x07, 0x97, 0xe6, 0x0a, 0x09, 0xe8, 0x81, 0xfd, 0x8a, 0xf0, 0x9c, 0x94, 0x20,
	0x92, 0x08, 0xc4, 0x2c, 0x25, 0x06, 0x21, 0x4f, 0x2e, 0x1e, 0x64, 0x5b, 0x84, 0x24, 0x21, 0x8a,
	0xb0, 0x38, 0x51, 0x4a, 0x0a, 0x9b, 0x14, 0xcc, 0x20, 0x03, 0x46, 0x27, 0x8e, 0x28, 0x36, 0x90,
	0x82, 0x82, 0xa4, 0x24, 0x36, 0x70, 0x08, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x32, 0x2c,
	0xfd, 0xe8, 0x6f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MathClient is the client API for Math service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MathClient interface {
	// Sum is unary RPC.
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	// PrimeFactors is server-side streaming RPC
	PrimeFactors(ctx context.Context, in *PrimeFactorsRequest, opts ...grpc.CallOption) (Math_PrimeFactorsClient, error)
}

type mathClient struct {
	cc *grpc.ClientConn
}

func NewMathClient(cc *grpc.ClientConn) MathClient {
	return &mathClient{cc}
}

func (c *mathClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/math.Math/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mathClient) PrimeFactors(ctx context.Context, in *PrimeFactorsRequest, opts ...grpc.CallOption) (Math_PrimeFactorsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Math_serviceDesc.Streams[0], "/math.Math/PrimeFactors", opts...)
	if err != nil {
		return nil, err
	}
	x := &mathPrimeFactorsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Math_PrimeFactorsClient interface {
	Recv() (*PrimeFactorsResponse, error)
	grpc.ClientStream
}

type mathPrimeFactorsClient struct {
	grpc.ClientStream
}

func (x *mathPrimeFactorsClient) Recv() (*PrimeFactorsResponse, error) {
	m := new(PrimeFactorsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MathServer is the server API for Math service.
type MathServer interface {
	// Sum is unary RPC.
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	// PrimeFactors is server-side streaming RPC
	PrimeFactors(*PrimeFactorsRequest, Math_PrimeFactorsServer) error
}

// UnimplementedMathServer can be embedded to have forward compatible implementations.
type UnimplementedMathServer struct {
}

func (*UnimplementedMathServer) Sum(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedMathServer) PrimeFactors(req *PrimeFactorsRequest, srv Math_PrimeFactorsServer) error {
	return status.Errorf(codes.Unimplemented, "method PrimeFactors not implemented")
}

func RegisterMathServer(s *grpc.Server, srv MathServer) {
	s.RegisterService(&_Math_serviceDesc, srv)
}

func _Math_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/math.Math/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Math_PrimeFactors_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeFactorsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MathServer).PrimeFactors(m, &mathPrimeFactorsServer{stream})
}

type Math_PrimeFactorsServer interface {
	Send(*PrimeFactorsResponse) error
	grpc.ServerStream
}

type mathPrimeFactorsServer struct {
	grpc.ServerStream
}

func (x *mathPrimeFactorsServer) Send(m *PrimeFactorsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Math_serviceDesc = grpc.ServiceDesc{
	ServiceName: "math.Math",
	HandlerType: (*MathServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _Math_Sum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeFactors",
			Handler:       _Math_PrimeFactors_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "math.proto",
}
